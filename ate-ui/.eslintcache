[{"D:\\ate-application-ui\\ate-ui\\src\\reportWebVitals.js":"1","D:\\ate-application-ui\\ate-ui\\src\\index.js":"2","D:\\ate-application-ui\\ate-ui\\src\\App.js":"3","D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\BrandItem.js":"4","D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\Brands.js":"5","D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\NewBrand.js":"6","D:\\ate-application-ui\\ate-ui\\src\\pages\\auth\\SignInForm.js":"7","D:\\ate-application-ui\\ate-ui\\src\\Main.js":"8","D:\\ate-application-ui\\ate-ui\\src\\pages\\NotFound.js":"9","D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\Types.js":"10","D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\TypeItem.js":"11","D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\NewType.js":"12","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\Items.js":"13","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\Item.js":"14","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\ItemDetails.js":"15","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\NewItem.js":"16","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\UpdateItem.js":"17","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\CustomerItem.js":"18","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\NewCustomer.js":"19","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\UpdateCustomer.js":"20","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\Order.js":"21","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\Orders.js":"22","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\OrderDetails.js":"23","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\Customers.js":"24","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\NewOrder.js":"25","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\UpdateOrder.js":"26","D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\Users.js":"27","D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\User.js":"28","D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\NewUser.js":"29","D:\\ate-application-ui\\ate-ui\\src\\pages\\department\\Department.js":"30","D:\\ate-application-ui\\ate-ui\\src\\pages\\department\\Departments.js":"31","D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\Admin.js":"32","D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\Admins.js":"33"},{"size":362,"mtime":1610288114289,"results":"34","hashOfConfig":"35"},{"size":500,"mtime":1610897557719,"results":"36","hashOfConfig":"35"},{"size":678,"mtime":1613301607873,"results":"37","hashOfConfig":"35"},{"size":1567,"mtime":1612377558255,"results":"38","hashOfConfig":"35"},{"size":1233,"mtime":1612377479126,"results":"39","hashOfConfig":"35"},{"size":2246,"mtime":1613294624691,"results":"40","hashOfConfig":"35"},{"size":2850,"mtime":1613294623497,"results":"41","hashOfConfig":"35"},{"size":6320,"mtime":1614525437755,"results":"42","hashOfConfig":"35"},{"size":164,"mtime":1612107230327,"results":"43","hashOfConfig":"35"},{"size":1118,"mtime":1613136665010,"results":"44","hashOfConfig":"35"},{"size":1241,"mtime":1613136918995,"results":"45","hashOfConfig":"35"},{"size":1993,"mtime":1613137798760,"results":"46","hashOfConfig":"35"},{"size":1494,"mtime":1613298813650,"results":"47","hashOfConfig":"35"},{"size":1407,"mtime":1613223437541,"results":"48","hashOfConfig":"35"},{"size":4035,"mtime":1613316028014,"results":"49","hashOfConfig":"35"},{"size":5740,"mtime":1613310853217,"results":"50","hashOfConfig":"35"},{"size":5783,"mtime":1613316147278,"results":"51","hashOfConfig":"35"},{"size":1497,"mtime":1613815519951,"results":"52","hashOfConfig":"35"},{"size":2957,"mtime":1613813552421,"results":"53","hashOfConfig":"35"},{"size":3390,"mtime":1613815724061,"results":"54","hashOfConfig":"35"},{"size":617,"mtime":1613828265998,"results":"55","hashOfConfig":"35"},{"size":1755,"mtime":1613823624337,"results":"56","hashOfConfig":"35"},{"size":4579,"mtime":1613903309752,"results":"57","hashOfConfig":"35"},{"size":1266,"mtime":1613810012118,"results":"58","hashOfConfig":"35"},{"size":4597,"mtime":1613910421869,"results":"59","hashOfConfig":"35"},{"size":4984,"mtime":1613911358556,"results":"60","hashOfConfig":"35"},{"size":1104,"mtime":1614111599812,"results":"61","hashOfConfig":"35"},{"size":1312,"mtime":1614111943110,"results":"62","hashOfConfig":"35"},{"size":3119,"mtime":1614525710335,"results":"63","hashOfConfig":"35"},{"size":414,"mtime":1614524011845,"results":"64","hashOfConfig":"35"},{"size":1431,"mtime":1614524207539,"results":"65","hashOfConfig":"35"},{"size":1168,"mtime":1614524838522,"results":"66","hashOfConfig":"35"},{"size":1113,"mtime":1614525427279,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"i0b25k",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"73"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ate-application-ui\\ate-ui\\src\\reportWebVitals.js",[],["146","147"],"D:\\ate-application-ui\\ate-ui\\src\\index.js",[],["148","149"],"D:\\ate-application-ui\\ate-ui\\src\\App.js",[],["150","151"],"D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\BrandItem.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\Brands.js",["152","153"],"import React, { Component } from 'react';\r\nimport BrandItem from './BrandItem';\r\nimport { BrowserRouter as Router, Link, NavLink } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass Brands extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let initialItems = [];\r\n        console.log(new Cookies().get('token'))\r\n        fetch('http://localhost:5000/ate-api/brands/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((BrandItem) => { return BrandItem });\r\n                this.setState({ items: initialItems });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to =\"/auth/brands-create\">Добавити новий бренд</Link>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            this.state.items.map(item => <BrandItem item={item} key={item.id} />)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Brands;","D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\NewBrand.js",["154","155"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nclass NewBrand extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            image: null\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n    };\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.value;\r\n        this.setState({ name: value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        let form_data = new FormData();\r\n        form_data.append('file', this.state.image, this.state.image.name);\r\n        fetch(`http://localhost:5000/ate-api/brands/?brandDto=${this.state.name}`, {\r\n            method: \"POST\",\r\n            body: form_data\r\n        }).then(function (response) {\r\n            if (response.status == 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status == 200) {\r\n                NotificationManager.success('Новий бренд добавленно');\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <div>\r\n                    <label>\r\n                        Назва бренда:\r\n                            <input type=\"text\" id=\"name\" required={true} placeholder=\"Enter name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                    </label>\r\n                    <p></p>\r\n                        Іконка бренду:\r\n                    <input type=\"file\" id=\"image\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required />\r\n                    <p></p>\r\n                </div>\r\n                <button className='addComment'>Підтвердити добавлення</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default NewBrand;","D:\\ate-application-ui\\ate-ui\\src\\pages\\auth\\SignInForm.js",[],"D:\\ate-application-ui\\ate-ui\\src\\Main.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\NotFound.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\Types.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\TypeItem.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\NewType.js",["156","157"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nclass NewType extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.value;\r\n        this.setState({ name: value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`http://localhost:5000/ate-api/types/`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        }).then(function (response) {\r\n            if (response.status == 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status === 400) {\r\n                NotificationManager.warning('Помилка вхідних даних, повторіть спробу.');\r\n            }\r\n            if (response.status == 200) {\r\n                NotificationManager.success('Новий бренд добавленно');\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <div>\r\n                    <label>\r\n                        Назва типу спорядження:\r\n                            <input type=\"text\" id=\"name\" placeholder=\"Enter name\" name=\"name\" required={true} value={this.state.name} onChange={this.handleChange} />\r\n                    </label>\r\n                </div>\r\n                <button className='addComment'>Підтвердити добавлення</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default NewType;","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\Items.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\Item.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\ItemDetails.js",["158","159","160","161"],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ItemDetails extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Item: {\r\n                id: '',\r\n                name: '',\r\n                description: '',\r\n                price: '',\r\n                type: {\r\n                    id: '',\r\n                    name: ''\r\n                },\r\n                brand: {\r\n                    id: '',\r\n                    name: '',\r\n                    urlImg: ''\r\n                },\r\n                imageUrl: ''\r\n            }\r\n        };\r\n\r\n        this.deleteElem = this.deleteElem.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let cookie = new Cookies();\r\n        const Id = this.props.match.params.Id;\r\n        let initialItems = [];\r\n        fetch(`http://localhost:5000/ate-api/items/${Id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer_\" + cookie.get('token')\r\n            }\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(data => {\r\n            initialItems = data;\r\n            this.setState({\r\n                Item: initialItems,\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n\r\n    deleteElem(e) {\r\n        e.preventDefault();\r\n        let answer = window.confirm(\"Ви видаляєте спорядження \" + this.state.Item.name +\r\n            \"\\nВидаллення спорядження може спричинити також видалення відповідного замовлення.\")\r\n        let res;\r\n        if (answer) {\r\n            fetch(`http://localhost:5000/ate-api/items/${this.state.Item.id}`, {\r\n                method: 'DELETE',\r\n            }).then(function (response) {\r\n                if (response.status === 500) {\r\n                    NotificationManager.error('Помилка сервера');\r\n                }\r\n                if (response.status === 200) {\r\n                    NotificationManager.error('Успішне видалення');\r\n                }\r\n            });\r\n            this.props.history.push('/auth/items');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let storImg;\r\n        let storText;\r\n        if (this.state.Item.free) {\r\n            storText = \"Так\";\r\n            storImg = \"https://res.cloudinary.com/elatof/image/upload/v1610811136/ate-project/inStorage_q4locf.png\";\r\n        } else {\r\n            storText = \"Ні\";\r\n            storImg = \"https://res.cloudinary.com/elatof/image/upload/v1610811136/ate-project/noneStorage_ww43se.png\";\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <b>Детальна інформація про спорядження</b><br />\r\n                <img src={this.state.Item.imageUrl} width=\"200\" height=\"200\" /><br />\r\n                <b>Унікальне айді спорядження в БД: </b>{this.state.Item.id}<br />\r\n                <b>Повне ім'я: </b>{this.state.Item.name}<br />\r\n                <b>Короткий опис: </b>{this.state.Item.description}<br />\r\n                <b>Ціна:</b><br />\r\n                <dd>За 1 день: {this.state.Item.price} грн.</dd>\r\n                <dd>За 3 дня: {this.state.Item.price * 3} грн.</dd>\r\n                <dd>За 7 днів: {this.state.Item.price * 7} грн.</dd>\r\n                <b>Тип: </b>{this.state.Item.type.name}<br />\r\n                <b>Бренд: </b>{this.state.Item.brand.name} <img src={this.state.Item.brand.urlImg} width=\"75\" height=\"75\" /><br />\r\n                <b>Наявність на складі: </b>{storText}  <img src={storImg} width=\"20\" height=\"20\" /><br />\r\n                <button onClick={this.deleteElem}>Видалити</button>\r\n                <Link to={\"/auth/items-update/\" + this.state.Item.id}>Обновити</Link>\r\n            </div>\r\n        );\r\n    }\r\n} export default ItemDetails; ","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\NewItem.js",["162","163","164","165","166","167"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass NewItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: {\r\n                name: '',\r\n                description: '',\r\n                price: '',\r\n                type: {\r\n                    id: '',\r\n                    name: '',\r\n                },\r\n                brand: {\r\n                    id: '',\r\n                    name: '',\r\n                    urlImg: ''\r\n                }\r\n            },\r\n            brands: [],\r\n            types: [],\r\n            image: null\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n    };\r\n\r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        if (name === 'name') {\r\n            this.state.item.name = value;\r\n        } else if (name === 'description') {\r\n            this.state.item.description = value;\r\n        } else if (name === 'price') {\r\n            this.state.item.price = value;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let initialItems = [];\r\n        fetch('http://localhost:5000/ate-api/types/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((Type) => { return Type });\r\n                this.setState({ types: initialItems });\r\n            });\r\n\r\n        fetch('http://localhost:5000/ate-api/brands/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((Brand) => { return Brand });\r\n                this.setState({ brands: initialItems });\r\n            });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if(this.state.item.brand.id === '' || this.state.item.type.id === ''){\r\n            NotificationManager.warning(\"Ви обов'язково маєте вибрати бренд та тип\");\r\n            return;\r\n        }\r\n\r\n        let form_data = new FormData();\r\n        let cookie = new Cookies();\r\n        form_data.append('file', this.state.image, this.state.image.name);\r\n\r\n        fetch(`http://localhost:5000/ate-api/items/?name=${this.state.item.name}&description=${this.state.item.description}&price=${this.state.item.price}&type.id=${this.state.item.type.id}&brand.id=${this.state.item.brand.id}`, {\r\n            method: \"POST\",\r\n            body: form_data,\r\n            headers: {\r\n                \"Authorization\": \"Bearer_\" + cookie.get('token')\r\n            }\r\n        }).then(function (response) {\r\n            if (response.status === 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status === 400) {\r\n                NotificationManager.warning('Помилка вхідних даних, повторіть спробу.');\r\n            }\r\n            if (response.status === 200) {\r\n                NotificationManager.success('Нове спорядження добавленно');\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let typeNames = this.state.types.map((type) => { return type.name });\r\n        let brandNames = this.state.brands.map((brand) => { return brand.name });\r\n        let handleType = (e) => {\r\n            let handleType;\r\n            this.state.types.forEach((type) => { if (e.value === type.name) handleType = type; });\r\n            this.state.item.type = handleType;\r\n        }\r\n        let handleBrand = (e) => {\r\n            let handleBrand;\r\n            this.state.brands.forEach((brand) => { if (e.value === brand.name) handleBrand = brand; });\r\n            this.state.item.brand = handleBrand;\r\n        }\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <b>Створення нового спорядження на скаді</b>\r\n                <div>\r\n                    Назва:\r\n                        <input type=\"text\" id=\"name\" required={true} placeholder=\"Enter name\" name=\"name\" onChange={this.handleChange} />\r\n                    <p />\r\n                    Короткий опис:\r\n                        <input type=\"text\" id=\"description\" required={true} placeholder=\"Enter description\" name=\"description\" onChange={this.handleChange} />\r\n                    <p />\r\n                    Ціна орендя за день (грн.):\r\n                        <input type=\"number\" id=\"price\" required={true} placeholder=\"Enter price\" name=\"price\" onChange={this.handleChange} />\r\n                    <p />\r\n                    Тип: <Dropdown options={typeNames} onChange={handleType} placeholder=\"Виберіть тип\" />\r\n                    <p />\r\n                    Бренд: <Dropdown options={brandNames} onChange={handleBrand} placeholder=\"Виберіть бренд\" />\r\n                    <p />\r\n                    Зображення спорядження:\r\n                        <input type=\"file\" id=\"image\" required={true} accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required />\r\n                    <p />\r\n                </div>\r\n                <button className='addComment'>Підтвердити добавлення</button>\r\n            </form>\r\n        );\r\n    }\r\n} export default NewItem;","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\UpdateItem.js",["168","169","170"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass UpdateItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            description: '',\r\n            price: '',\r\n            type: {\r\n                id: '',\r\n                name: '',\r\n            },\r\n            brand: {\r\n                id: '',\r\n                name: '',\r\n                urlImg: ''\r\n            },\r\n            imageUrl: null,\r\n            brands: [],\r\n            types: [],\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n    };\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        this.setState({ [target.name]: target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let cookie = new Cookies();\r\n        const Id = this.props.match.params.Id;\r\n        let initialItems = [];\r\n        fetch(`http://localhost:5000/ate-api/items/${Id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer_\" + cookie.get('token')\r\n            }\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(data => {\r\n            initialItems = data;\r\n            this.setState(data);\r\n        });\r\n\r\n        fetch('http://localhost:5000/ate-api/types/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((Type) => { return Type });\r\n                this.setState({ types: initialItems });\r\n            });\r\n\r\n        fetch('http://localhost:5000/ate-api/brands/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((Brand) => { return Brand });\r\n                this.setState({ brands: initialItems });\r\n            });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let form_data = new FormData();\r\n        let cookie = new Cookies();\r\n        if(this.state.image){\r\n            form_data.append('file', this.state.image, this.state.image.name);\r\n        }\r\n\r\n        fetch(`http://localhost:5000/ate-api/items/?id=${this.state.id}&name=${this.state.name}&description=${this.state.description}&price=${this.state.price}&type.id=${this.state.type.id}&brand.id=${this.state.brand.id}`, {\r\n            method: \"PUT\",\r\n            body: form_data,\r\n            headers: {\r\n                \"Authorization\": \"Bearer_\" + cookie.get('token')\r\n            }\r\n        }).then(function (response) {\r\n            if (response.status === 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status === 400) {\r\n                NotificationManager.warning('Помилка вхідних даних, повторіть спробу.');\r\n            }\r\n            if (response.status === 200) {\r\n                window.location.reload();\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let typeNames = this.state.types.map((type) => { return type.name });\r\n        let brandNames = this.state.brands.map((brand) => { return brand.name });\r\n        let handleType = (e) => {\r\n            let handleType;\r\n            this.state.types.forEach((type) => { if (e.value === type.name) handleType = type; });\r\n            this.state.type = handleType;\r\n        }\r\n        let handleBrand = (e) => {\r\n            let handleBrand;\r\n            this.state.brands.forEach((brand) => { if (e.value === brand.name) handleBrand = brand; });\r\n            this.state.brand = handleBrand;\r\n        }\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <b>Обновлення спорядження на скаді</b>\r\n                <div>\r\n                    Назва:\r\n                        <input type=\"text\" id=\"name\" required={true} placeholder=\"Enter name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                    <p />\r\n                    Короткий опис:\r\n                        <input type=\"text\" id=\"description\" required={true} placeholder=\"Enter description\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                    <p />\r\n                    Ціна орендя за день (грн.):\r\n                        <input type=\"number\" id=\"price\" required={true} placeholder=\"Enter price\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\r\n                    <p />\r\n                    Тип: <Dropdown options={typeNames} value={this.state.type.name} onChange={handleType} placeholder=\"Виберіть тип\" />\r\n                    <p />\r\n                    Бренд: <Dropdown options={brandNames} value={this.state.brand.name} onChange={handleBrand} placeholder=\"Виберіть бренд\" />\r\n                    <p />\r\n                    Зображення спорядження:\r\n                    <img src={this.state.imageUrl} width=\"200\" height=\"200\" />\r\n                    <input type=\"file\" id=\"image\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} />\r\n                    <p />\r\n                </div>\r\n                <button className='addComment'>Підтвердити обновлення</button>\r\n            </form>\r\n        );\r\n    }\r\n} export default UpdateItem;","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\CustomerItem.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\NewCustomer.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\UpdateCustomer.js",["171","172","173"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass UpdateCustomer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            surname: '',\r\n            phone: '',\r\n            email: ''\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        this.setState({ [target.name]: target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const Id = this.props.match.params.Id;\r\n        let initialItems = [];\r\n        console.log(Id)\r\n        fetch(`http://localhost:5000/ate-api/customers/${Id}`)\r\n        .then(response => {\r\n            return response.json();\r\n        }).then(data => {\r\n            initialItems = data;\r\n            this.setState(data);\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        fetch(`http://localhost:5000/ate-api/customers/`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        }).then(function (response) {\r\n            if (response.status === 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status === 400) {\r\n                NotificationManager.warning('Помилка вхідних даних, повторіть спробу.');\r\n            }\r\n            if (response.status === 200) {\r\n                window.location.reload();\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <b>Обновлення даних по клієнту</b>\r\n                <div>\r\n                    <p></p>\r\n                        Ім'я:\r\n                            <input type=\"text\" id=\"name\" required={true} placeholder=\"Enter name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                    <p></p>\r\n                        Прізвище:\r\n                            <input type=\"text\" id=\"surname\" required={true} placeholder=\"Enter surname\" name=\"surname\" value={this.state.surname} onChange={this.handleChange} />\r\n                    <p></p>\r\n                        Телефон:\r\n                            <input type=\"tel\" id=\"phone\" required={true} placeholder=\"Enter phone\" pattern=\"^[+][0-9]{12}$\" name=\"phone\" value={this.state.phone} onChange={this.handleChange} />\r\n                        Приклад формату: +380982561299\r\n                    <p></p>\r\n                        Почтова скринька:\r\n                            <input type=\"email\" id=\"email\" required={true} placeholder=\"Enter email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                </div>\r\n                <button className='addComment'>Підтвердити обновлення</button>\r\n            </form>\r\n        );\r\n    }\r\n} export default UpdateCustomer;","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\Order.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\Orders.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\OrderDetails.js",["174","175","176","177"],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass OrderDetails extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            employee: {\r\n                id: '',\r\n                firstName: '',\r\n                secondName: ''\r\n            },\r\n            item: {\r\n                id: '',\r\n                name: '',\r\n                description: '',\r\n                price: '',\r\n                type: {\r\n                    id: '',\r\n                    name: ''\r\n                },\r\n                brand: {\r\n                    id: '',\r\n                    name: '',\r\n                    urlImg: ''\r\n                },\r\n                imageUrl: ''\r\n            },\r\n            customer: {\r\n                id: '',\r\n                name: '',\r\n                surname: '',\r\n                phone: '',\r\n                email: ''\r\n            }\r\n        };\r\n\r\n        this.deleteElem = this.deleteElem.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const Id = this.props.match.params.Id;\r\n        fetch(`http://localhost:5000/ate-api/orders/${Id}`)\r\n            .then(response => {\r\n                return response.json();\r\n            }).then(data => {\r\n                console.log(data)\r\n                this.setState(data);\r\n            });\r\n    }\r\n\r\n\r\n\r\n    deleteElem(e) {\r\n        e.preventDefault();\r\n        let answer = window.confirm(\"Ви видаляєте змовлення \" + this.state.id +\r\n            \"\\nВи вевненні в свому рішені?\")\r\n        let res;\r\n        if (answer) {\r\n            fetch(`http://localhost:5000/ate-api/orders/${this.state.id}`, {\r\n                method: 'DELETE',\r\n            }).then(function (response) {\r\n                if (response.status === 500) {\r\n                    NotificationManager.error('Помилка сервера');\r\n                }\r\n                if (response.status === 200) {\r\n                    NotificationManager.success('Успішне видалення');\r\n                }\r\n            });\r\n            this.props.history.push('/auth/orders');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const item = this.state;\r\n        let startD = item.startDate.slice(0, 10);\r\n        let endD = item.endDate.slice(0, 10);\r\n        return (\r\n            <div>\r\n                <b>Детальна інформація про замовлення</b><br />\r\n                <b>Номер оренди: </b>{item.id}<br />\r\n                <b>Дата початку: </b>{startD}<br />\r\n                <b>Дата завершення: </b>{endD}<br />\r\n                <b>Спорядження:</b><br />\r\n                <dd>\r\n                    <img src={item.item.imageUrl} width=\"150\" height=\"150\" />\r\n                    <b>Повне ім'я: </b>{item.item.name}<br />\r\n                    <b>Короткий опис: </b>{item.item.description}<br />\r\n                    <b>Ціна за 1 день: </b>{item.item.price} грн.<br />\r\n                    <b>Тип: </b>{item.item.type.name}<br />\r\n                    <b>Бренд: </b>{item.item.brand.name} <img src={item.item.brand.urlImg} width=\"75\" height=\"75\" /><br />\r\n                    <Link exact to={\"/auth/items-details/\" + item.item.id}>Детальніше</Link>\r\n                </dd>\r\n                <b>Замовник:</b><br />\r\n                <dd>\r\n                    <b>Ім'я: </b>{item.customer.name}<br />\r\n                    <b>Прізвище: </b>{item.customer.surname}<br />\r\n                    <b>Телефон: </b>{item.customer.phone}<br />\r\n                    <b>Поштова скринька: </b>{item.customer.email}<br />\r\n                </dd>\r\n                <b>Створив консультант:</b><br />\r\n                <dd>\r\n                    <b>Ім'я: </b>{item.employee.firstName}<br />\r\n                    <b>Прізвище: </b>{item.employee.secondName}<br />\r\n                    <b>Телефон: </b>{item.customer.phone}<br />\r\n                    <b>Поштова скринька: </b>{item.customer.email}<br />\r\n                </dd>\r\n                <button onClick={this.deleteElem}>Видалити</button>\r\n                <Link to={\"/auth/orders-update/\" + item.id}>Обновити</Link>\r\n            </div>\r\n        );\r\n    }\r\n} export default OrderDetails; ","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\Customers.js",["178","179"],"import React, { Component } from 'react';\r\nimport CustomerItem from './CustomerItem';\r\nimport { BrowserRouter as Router, Link, NavLink } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\n\r\nclass Customers extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let initialItems = [];\r\n        console.log(new Cookies().get('token'))\r\n        fetch('http://localhost:5000/ate-api/customers/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((CustomerItem) => { return CustomerItem });\r\n                this.setState({ items: initialItems });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to =\"/auth/customers-create\">Добавити нового клієнта</Link>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            this.state.items.map(item => <CustomerItem item={item} key={item.id} />)\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Customers;","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\NewOrder.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\UpdateOrder.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\Users.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\User.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\NewUser.js",["180","181"],"D:\\ate-application-ui\\ate-ui\\src\\pages\\department\\Department.js",["182"],"D:\\ate-application-ui\\ate-ui\\src\\pages\\department\\Departments.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\Admin.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\Admins.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"183","replacedBy":"187"},{"ruleId":"185","replacedBy":"188"},{"ruleId":"183","replacedBy":"189"},{"ruleId":"185","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":3,"column":27,"nodeType":"193","messageId":"194","endLine":3,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":3,"column":41,"nodeType":"193","messageId":"194","endLine":3,"endColumn":48},{"ruleId":"196","severity":1,"message":"197","line":37,"column":33,"nodeType":"198","messageId":"199","endLine":37,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":40,"column":33,"nodeType":"198","messageId":"199","endLine":40,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":30,"column":33,"nodeType":"198","messageId":"199","endLine":30,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":36,"column":33,"nodeType":"198","messageId":"199","endLine":36,"endColumn":35},{"ruleId":"191","severity":1,"message":"200","line":57,"column":13,"nodeType":"193","messageId":"194","endLine":57,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":89,"column":17,"nodeType":"203","endLine":89,"endColumn":80},{"ruleId":"201","severity":1,"message":"202","line":98,"column":60,"nodeType":"203","endLine":98,"endColumn":125},{"ruleId":"201","severity":1,"message":"202","line":99,"column":57,"nodeType":"203","endLine":99,"endColumn":101},{"ruleId":"204","severity":1,"message":"205","line":44,"column":13,"nodeType":"206","endLine":44,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":46,"column":13,"nodeType":"206","endLine":46,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":48,"column":13,"nodeType":"206","endLine":48,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":107,"column":13,"nodeType":"206","endLine":107,"endColumn":28},{"ruleId":"204","severity":1,"message":"205","line":112,"column":13,"nodeType":"206","endLine":112,"endColumn":28},{"ruleId":"207","severity":1,"message":"208","line":133,"column":136,"nodeType":"209","endLine":133,"endColumn":144},{"ruleId":"204","severity":1,"message":"205","line":110,"column":13,"nodeType":"206","endLine":110,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":115,"column":13,"nodeType":"206","endLine":115,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":135,"column":21,"nodeType":"203","endLine":135,"endColumn":79},{"ruleId":"191","severity":1,"message":"210","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":16},{"ruleId":"191","severity":1,"message":"211","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":15},{"ruleId":"191","severity":1,"message":"212","line":35,"column":13,"nodeType":"193","messageId":"194","endLine":35,"endColumn":25},{"ruleId":"191","severity":1,"message":"211","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":15},{"ruleId":"191","severity":1,"message":"200","line":65,"column":13,"nodeType":"193","messageId":"194","endLine":65,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":95,"column":21,"nodeType":"203","endLine":95,"endColumn":78},{"ruleId":"201","severity":1,"message":"202","line":100,"column":58,"nodeType":"203","endLine":100,"endColumn":117},{"ruleId":"191","severity":1,"message":"192","line":3,"column":27,"nodeType":"193","messageId":"194","endLine":3,"endColumn":33},{"ruleId":"191","severity":1,"message":"195","line":3,"column":41,"nodeType":"193","messageId":"194","endLine":3,"endColumn":48},{"ruleId":"196","severity":1,"message":"197","line":36,"column":33,"nodeType":"198","messageId":"199","endLine":36,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":42,"column":33,"nodeType":"198","messageId":"199","endLine":42,"endColumn":35},{"ruleId":"191","severity":1,"message":"213","line":2,"column":9,"nodeType":"193","messageId":"194","endLine":2,"endColumn":13},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],["214"],["215"],["214"],["215"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'res' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Dropdown' is defined but never used.","'Cookies' is defined but never used.","'initialItems' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]