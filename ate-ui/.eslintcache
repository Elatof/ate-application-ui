[{"D:\\ate-application-ui\\ate-ui\\src\\reportWebVitals.js":"1","D:\\ate-application-ui\\ate-ui\\src\\index.js":"2","D:\\ate-application-ui\\ate-ui\\src\\App.js":"3","D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\BrandItem.js":"4","D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\Brands.js":"5","D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\NewBrand.js":"6","D:\\ate-application-ui\\ate-ui\\src\\pages\\auth\\SignInForm.js":"7","D:\\ate-application-ui\\ate-ui\\src\\Main.js":"8","D:\\ate-application-ui\\ate-ui\\src\\pages\\NotFound.js":"9","D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\Types.js":"10","D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\TypeItem.js":"11","D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\NewType.js":"12","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\Items.js":"13","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\Item.js":"14","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\ItemDetails.js":"15","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\NewItem.js":"16","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\UpdateItem.js":"17","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\CustomerItem.js":"18","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\NewCustomer.js":"19","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\UpdateCustomer.js":"20","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\Order.js":"21","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\Orders.js":"22","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\OrderDetails.js":"23","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\Customers.js":"24","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\NewOrder.js":"25","D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\UpdateOrder.js":"26","D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\Users.js":"27","D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\User.js":"28","D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\NewUser.js":"29","D:\\ate-application-ui\\ate-ui\\src\\pages\\department\\Department.js":"30","D:\\ate-application-ui\\ate-ui\\src\\pages\\department\\Departments.js":"31","D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\Admin.js":"32","D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\Admins.js":"33","D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\NewAdmin.js":"34","D:\\ate-application-ui\\ate-ui\\src\\pages\\stat\\CommonStatistic.js":"35"},{"size":362,"mtime":1610288114289,"results":"36","hashOfConfig":"37"},{"size":500,"mtime":1610897557719,"results":"38","hashOfConfig":"37"},{"size":771,"mtime":1615127148919,"results":"39","hashOfConfig":"37"},{"size":1628,"mtime":1615132361513,"results":"40","hashOfConfig":"37"},{"size":1427,"mtime":1615129938568,"results":"41","hashOfConfig":"37"},{"size":2267,"mtime":1615133270288,"results":"42","hashOfConfig":"37"},{"size":3189,"mtime":1615118351592,"results":"43","hashOfConfig":"37"},{"size":6385,"mtime":1615126726927,"results":"44","hashOfConfig":"37"},{"size":164,"mtime":1612107230327,"results":"45","hashOfConfig":"37"},{"size":1192,"mtime":1615134973008,"results":"46","hashOfConfig":"37"},{"size":1301,"mtime":1615135443594,"results":"47","hashOfConfig":"37"},{"size":2027,"mtime":1615136589946,"results":"48","hashOfConfig":"37"},{"size":1663,"mtime":1615196387846,"results":"49","hashOfConfig":"37"},{"size":1493,"mtime":1615197597732,"results":"50","hashOfConfig":"37"},{"size":4156,"mtime":1615199883107,"results":"51","hashOfConfig":"37"},{"size":5807,"mtime":1615202532187,"results":"52","hashOfConfig":"37"},{"size":6003,"mtime":1615203677278,"results":"53","hashOfConfig":"37"},{"size":1595,"mtime":1615206144287,"results":"54","hashOfConfig":"37"},{"size":3078,"mtime":1615206881244,"results":"55","hashOfConfig":"37"},{"size":3509,"mtime":1615207208606,"results":"56","hashOfConfig":"37"},{"size":676,"mtime":1615212688574,"results":"57","hashOfConfig":"37"},{"size":1879,"mtime":1615208277909,"results":"58","hashOfConfig":"37"},{"size":4766,"mtime":1615216260523,"results":"59","hashOfConfig":"37"},{"size":1369,"mtime":1615204881678,"results":"60","hashOfConfig":"37"},{"size":4714,"mtime":1615213604993,"results":"61","hashOfConfig":"37"},{"size":5071,"mtime":1615216859640,"results":"62","hashOfConfig":"37"},{"size":1260,"mtime":1615219487124,"results":"63","hashOfConfig":"37"},{"size":1345,"mtime":1615219561562,"results":"64","hashOfConfig":"37"},{"size":3548,"mtime":1615220002354,"results":"65","hashOfConfig":"37"},{"size":433,"mtime":1615220552107,"results":"66","hashOfConfig":"37"},{"size":1566,"mtime":1615220288495,"results":"67","hashOfConfig":"37"},{"size":1187,"mtime":1615218540892,"results":"68","hashOfConfig":"37"},{"size":1260,"mtime":1615219480957,"results":"69","hashOfConfig":"37"},{"size":2643,"mtime":1615219298418,"results":"70","hashOfConfig":"37"},{"size":11994,"mtime":1615217901839,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"i0b25k",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"87"},"D:\\ate-application-ui\\ate-ui\\src\\reportWebVitals.js",[],["154","155"],"D:\\ate-application-ui\\ate-ui\\src\\index.js",[],["156","157"],"D:\\ate-application-ui\\ate-ui\\src\\App.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\BrandItem.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\Brands.js",["158","159"],"D:\\ate-application-ui\\ate-ui\\src\\pages\\brand\\NewBrand.js",["160","161"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport './NewBrand.css'\r\n\r\nclass NewBrand extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            image: null\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n    };\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.value;\r\n        this.setState({ name: value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        let form_data = new FormData();\r\n        form_data.append('file', this.state.image, this.state.image.name);\r\n        fetch(`http://localhost:5000/ate-api/brands/?brandDto=${this.state.name}`, {\r\n            method: \"POST\",\r\n            body: form_data\r\n        }).then(function (response) {\r\n            if (response.status == 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status == 200) {\r\n                NotificationManager.success('Новий бренд добавленно');\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"newBrand\">\r\n                Добавлення нового бренду\r\n                <form className= \"newBrand\" onSubmit={this.onSubmit}>\r\n                    <input className= \"newBrand\" type=\"text\" id=\"name\" required={true} placeholder=\"Введіть ім'я\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                    <p></p>\r\n                    <input className= \"newBrand\" type=\"file\" id=\"image\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required />\r\n                    <p></p>\r\n                    <button className='myButton'>Підтвердити добавлення</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NewBrand;",["162","163"],"D:\\ate-application-ui\\ate-ui\\src\\pages\\auth\\SignInForm.js",[],"D:\\ate-application-ui\\ate-ui\\src\\Main.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\NotFound.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\Types.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\TypeItem.js",[],["164","165"],"D:\\ate-application-ui\\ate-ui\\src\\pages\\type\\NewType.js",["166","167","168"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport \"./NewType.css\"\r\n\r\nclass NewType extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.value;\r\n        this.setState({ name: value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        fetch(`http://localhost:5000/ate-api/types/`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        }).then(function (response) {\r\n            if (response.status == 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status === 400) {\r\n                NotificationManager.warning('Помилка вхідних даних, повторіть спробу.');\r\n            }\r\n            if (response.status == 200) {\r\n                NotificationManager.success('Новий бренд добавленно');\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"newType\">\r\n                <form className=\"newType\" onSubmit={this.onSubmit}>\r\n                    <input className=\"newType\" type=\"text\" id=\"name\" placeholder=\"Введіть наву нового типу\" name=\"name\" required={true} value={this.state.name} onChange={this.handleChange} />\r\n                    <p></p>\r\n                    <button className=\"newType\" className='myButton'>Підтвердити добавлення</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NewType;","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\Items.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\Item.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\ItemDetails.js",["169","170","171","172"],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\NewItem.js",["173","174","175","176","177","178"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport Cookies from 'universal-cookie';\r\nimport './NewItem.css';\r\n\r\nclass NewItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item: {\r\n                name: '',\r\n                description: '',\r\n                price: '',\r\n                type: {\r\n                    id: '',\r\n                    name: '',\r\n                },\r\n                brand: {\r\n                    id: '',\r\n                    name: '',\r\n                    urlImg: ''\r\n                }\r\n            },\r\n            brands: [],\r\n            types: [],\r\n            image: null\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n    };\r\n\r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        if (name === 'name') {\r\n            this.state.item.name = value;\r\n        } else if (name === 'description') {\r\n            this.state.item.description = value;\r\n        } else if (name === 'price') {\r\n            this.state.item.price = value;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let initialItems = [];\r\n        fetch('http://localhost:5000/ate-api/types/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((Type) => { return Type });\r\n                this.setState({ types: initialItems });\r\n            });\r\n\r\n        fetch('http://localhost:5000/ate-api/brands/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((Brand) => { return Brand });\r\n                this.setState({ brands: initialItems });\r\n            });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.state.item.brand.id === '' || this.state.item.type.id === '') {\r\n            NotificationManager.warning(\"Ви обов'язково маєте вибрати бренд та тип\");\r\n            return;\r\n        }\r\n\r\n        let form_data = new FormData();\r\n        let cookie = new Cookies();\r\n        form_data.append('file', this.state.image, this.state.image.name);\r\n\r\n        fetch(`http://localhost:5000/ate-api/items/?name=${this.state.item.name}&description=${this.state.item.description}&price=${this.state.item.price}&type.id=${this.state.item.type.id}&brand.id=${this.state.item.brand.id}`, {\r\n            method: \"POST\",\r\n            body: form_data,\r\n            headers: {\r\n                \"Authorization\": \"Bearer_\" + cookie.get('token')\r\n            }\r\n        }).then(function (response) {\r\n            if (response.status === 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status === 400) {\r\n                NotificationManager.warning('Помилка вхідних даних, повторіть спробу.');\r\n            }\r\n            if (response.status === 200) {\r\n                NotificationManager.success('Нове спорядження добавленно');\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let typeNames = this.state.types.map((type) => { return type.name });\r\n        let brandNames = this.state.brands.map((brand) => { return brand.name });\r\n        let handleType = (e) => {\r\n            let handleType;\r\n            this.state.types.forEach((type) => { if (e.value === type.name) handleType = type; });\r\n            this.state.item.type = handleType;\r\n        }\r\n        let handleBrand = (e) => {\r\n            let handleBrand;\r\n            this.state.brands.forEach((brand) => { if (e.value === brand.name) handleBrand = brand; });\r\n            this.state.item.brand = handleBrand;\r\n        }\r\n\r\n        return (\r\n            <div className=\"newItem\">\r\n                <form onSubmit={this.onSubmit}>\r\n                    <b>Створення нового спорядження на скаді</b>\r\n                    <p />\r\n                    <input className=\"newItem\" type=\"text\" id=\"name\" required={true} placeholder=\"Введіть назву\" name=\"name\" onChange={this.handleChange} />\r\n                    <p />\r\n                    <input className=\"newItem\" type=\"text\" id=\"description\" required={true} placeholder=\"Введіть короткий опис\" name=\"description\" onChange={this.handleChange} />\r\n                    <p />\r\n                    <input className=\"newItem\" type=\"number\" id=\"price\" required={true} placeholder=\"Введіть ціну\" name=\"price\" onChange={this.handleChange} />\r\n                    <p />\r\n                    <Dropdown className=\"dropDown\" options={typeNames} onChange={handleType} placeholder=\"Виберіть тип\" />\r\n                    <p />\r\n                    <Dropdown className=\"dropDown\" options={brandNames} onChange={handleBrand} placeholder=\"Виберіть бренд\" />\r\n                    <p />\r\n                    Зображення спорядження:\r\n                    <input className=\"newItem\" type=\"file\" id=\"image\" required={true} accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required />\r\n                    <p />\r\n                    <button className='myButton'>Підтвердити добавлення</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n} export default NewItem;","D:\\ate-application-ui\\ate-ui\\src\\pages\\item\\UpdateItem.js",["179","180","181"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport Cookies from 'universal-cookie';\r\nimport \"./UpdateItem.css\";\r\n\r\nclass UpdateItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            description: '',\r\n            price: '',\r\n            type: {\r\n                id: '',\r\n                name: '',\r\n            },\r\n            brand: {\r\n                id: '',\r\n                name: '',\r\n                urlImg: ''\r\n            },\r\n            imageUrl: null,\r\n            brands: [],\r\n            types: [],\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n    };\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        this.setState({ [target.name]: target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let cookie = new Cookies();\r\n        const Id = this.props.match.params.Id;\r\n        let initialItems = [];\r\n        fetch(`http://localhost:5000/ate-api/items/${Id}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer_\" + cookie.get('token')\r\n            }\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(data => {\r\n            initialItems = data;\r\n            this.setState(data);\r\n        });\r\n\r\n        fetch('http://localhost:5000/ate-api/types/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((Type) => { return Type });\r\n                this.setState({ types: initialItems });\r\n            });\r\n\r\n        fetch('http://localhost:5000/ate-api/brands/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((Brand) => { return Brand });\r\n                this.setState({ brands: initialItems });\r\n            });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let form_data = new FormData();\r\n        let cookie = new Cookies();\r\n        if (this.state.image) {\r\n            form_data.append('file', this.state.image, this.state.image.name);\r\n        }\r\n\r\n        fetch(`http://localhost:5000/ate-api/items/?id=${this.state.id}&name=${this.state.name}&description=${this.state.description}&price=${this.state.price}&type.id=${this.state.type.id}&brand.id=${this.state.brand.id}`, {\r\n            method: \"PUT\",\r\n            body: form_data,\r\n            headers: {\r\n                \"Authorization\": \"Bearer_\" + cookie.get('token')\r\n            }\r\n        }).then(function (response) {\r\n            if (response.status === 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status === 400) {\r\n                NotificationManager.warning('Помилка вхідних даних, повторіть спробу.');\r\n            }\r\n            if (response.status === 200) {\r\n                window.location.reload();\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let typeNames = this.state.types.map((type) => { return type.name });\r\n        let brandNames = this.state.brands.map((brand) => { return brand.name });\r\n        let handleType = (e) => {\r\n            let handleType;\r\n            this.state.types.forEach((type) => { if (e.value === type.name) handleType = type; });\r\n            this.state.type = handleType;\r\n        }\r\n        let handleBrand = (e) => {\r\n            let handleBrand;\r\n            this.state.brands.forEach((brand) => { if (e.value === brand.name) handleBrand = brand; });\r\n            this.state.brand = handleBrand;\r\n        }\r\n        return (\r\n            <div className=\"updateItem\">\r\n                <form onSubmit={this.onSubmit}>\r\n                    <b>Обновлення спорядження на скаді</b>\r\n                    <p />\r\n                    Назва:\r\n                        <input className=\"updateItem\" type=\"text\" id=\"name\" required={true} placeholder=\"Enter name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                    <p />\r\n                    Короткий опис:\r\n                        <input className=\"updateItem\" type=\"text\" id=\"description\" required={true} placeholder=\"Enter description\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                    <p />\r\n                    Ціна орендя за день (грн.):\r\n                        <input className=\"updateItem\" type=\"number\" id=\"price\" required={true} placeholder=\"Enter price\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\r\n                    <p />\r\n                    Тип: <Dropdown className=\"dropDown\" options={typeNames} value={this.state.type.name} onChange={handleType} placeholder=\"Виберіть тип\" />\r\n                    <p />\r\n                    Бренд: <Dropdown className=\"dropDown\" options={brandNames} value={this.state.brand.name} onChange={handleBrand} placeholder=\"Виберіть бренд\" />\r\n                    <p />\r\n                    Зображення спорядження:\r\n                    <img src={this.state.imageUrl} width=\"200\" height=\"200\" />\r\n                    <input className=\"updateItem\" type=\"file\" id=\"image\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} />\r\n                    <p />\r\n                    <button className=\"myButton\">Підтвердити обновлення</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n} export default UpdateItem;","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\CustomerItem.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\NewCustomer.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\UpdateCustomer.js",["182"],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\Order.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\Orders.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\OrderDetails.js",["183","184","185"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./OrderDetails.css\";\r\n\r\nclass OrderDetails extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            employee: {\r\n                id: '',\r\n                firstName: '',\r\n                secondName: ''\r\n            },\r\n            item: {\r\n                id: '',\r\n                name: '',\r\n                description: '',\r\n                price: '',\r\n                type: {\r\n                    id: '',\r\n                    name: ''\r\n                },\r\n                brand: {\r\n                    id: '',\r\n                    name: '',\r\n                    urlImg: ''\r\n                },\r\n                imageUrl: ''\r\n            },\r\n            customer: {\r\n                id: '',\r\n                name: '',\r\n                surname: '',\r\n                phone: '',\r\n                email: ''\r\n            }\r\n        };\r\n\r\n        this.deleteElem = this.deleteElem.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const Id = this.props.match.params.Id;\r\n        fetch(`http://localhost:5000/ate-api/orders/${Id}`)\r\n            .then(response => {\r\n                return response.json();\r\n            }).then(data => {\r\n                console.log(data)\r\n                this.setState(data);\r\n            });\r\n    }\r\n\r\n\r\n\r\n    deleteElem(e) {\r\n        e.preventDefault();\r\n        let answer = window.confirm(\"Ви видаляєте змовлення \" + this.state.id +\r\n            \"\\nВи вевненні в свому рішені?\")\r\n        let res;\r\n        if (answer) {\r\n            fetch(`http://localhost:5000/ate-api/orders/${this.state.id}`, {\r\n                method: 'DELETE',\r\n            }).then(function (response) {\r\n                if (response.status === 500) {\r\n                    NotificationManager.error('Помилка сервера');\r\n                }\r\n                if (response.status === 200) {\r\n                    NotificationManager.success('Успішне видалення');\r\n                }\r\n            });\r\n            this.props.history.push('/auth/orders');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const item = this.state;\r\n        let startD = item.startDate.slice(0, 10);\r\n        let endD = item.endDate.slice(0, 10);\r\n        return (\r\n            <div className=\"mainDivOrderDetails\">\r\n                <b>Детальна інформація про замовлення</b><br />\r\n                <b>Номер оренди: </b>{item.id}<br />\r\n                <b>Дата початку: </b>{startD}<br />\r\n                <b>Дата завершення: </b>{endD}<br />\r\n                <hr></hr>\r\n                <b>Спорядження:</b><br />\r\n                <dd>\r\n                    <img src={item.item.imageUrl} width=\"150\" height=\"150\" /><br />\r\n                    <b>Повне ім'я: </b>{item.item.name}<br />\r\n                    <b>Короткий опис: </b>{item.item.description}<br />\r\n                    <b>Ціна за 1 день: </b>{item.item.price} грн.<br />\r\n                    <b>Тип: </b>{item.item.type.name}<br />\r\n                    <b>Бренд: </b>{item.item.brand.name} <img src={item.item.brand.urlImg} width=\"75\" height=\"75\" /><br />\r\n                    <Link className=\"details\" exact to={\"/auth/items-details/\" + item.item.id}>Детальніше про спорядження</Link>\r\n                </dd>\r\n                <div className=\"customerDetails\">\r\n                    <b>Замовник:</b><br />\r\n                    <dd>\r\n                        <b>Ім'я: </b>{item.customer.name}<br />\r\n                        <b>Прізвище: </b>{item.customer.surname}<br />\r\n                        <b>Телефон: </b>{item.customer.phone}<br />\r\n                        <b>Поштова скринька: </b>{item.customer.email}<br />\r\n                    </dd>\r\n                </div>\r\n                <div className=\"emolyeeDetails\">\r\n                    <b>Створив консультант:</b><br />\r\n                    <dd>\r\n                        <b>Ім'я: </b>{item.employee.firstName}<br />\r\n                        <b>Прізвище: </b>{item.employee.secondName}<br />\r\n                    </dd>\r\n                </div>\r\n                <button className=\"deleteOrder\" onClick={this.deleteElem}>Видалити</button>\r\n                <Link className=\"updateOrder\" to={\"/auth/orders-update/\" + item.id}>Обновити</Link>\r\n            </div>\r\n        );\r\n    }\r\n} export default OrderDetails;","D:\\ate-application-ui\\ate-ui\\src\\pages\\customer\\Customers.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\NewOrder.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\item-order\\UpdateOrder.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\Users.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\User.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\user\\NewUser.js",["186","187"],"D:\\ate-application-ui\\ate-ui\\src\\pages\\department\\Department.js",["188"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Department(props) {\r\n    const item = props.item;\r\n\r\n    return (\r\n        <tr className=\"bottom\">\r\n            <td>{item.id} |</td>\r\n            <td>{item.name} |</td>\r\n            <td>{item.address.country}<br/>{item.address.city}<br/>{item.address.street}<br/>{item.address.buildNumber}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Department;\r\n","D:\\ate-application-ui\\ate-ui\\src\\pages\\department\\Departments.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\Admin.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\Admins.js",[],"D:\\ate-application-ui\\ate-ui\\src\\pages\\admin\\NewAdmin.js",["189","190"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport \"./NewAdmin.css\";\r\n\r\nclass NewAdmin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: '',\r\n            secondName: '',\r\n            isAdmin: 2,\r\n            password: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.value;\r\n        this.setState({ [target.name]: value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        fetch(`http://localhost:5000/ate-api/employees/`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        }).then(function (response) {\r\n            if (response.status == 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status === 400) {\r\n                NotificationManager.warning('Помилка вхідних даних, повторіть спробу.');\r\n            }\r\n            if (response.status == 200) {\r\n                NotificationManager.success('Нового адміністратора добавленно');\r\n            }\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"newAdmin\">\r\n                Створення нового адміністратора\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input className=\"newAdmin\" type=\"text\" id=\"firstName\" placeholder=\"Введіть ім'я\" name=\"firstName\" required={true} value={this.state.firstName} onChange={this.handleChange} />\r\n                    <p />\r\n                    <input className=\"newAdmin\" type=\"text\" id=\"secondName\" placeholder=\"Введіть прізвище\" name=\"secondName\" required={true} value={this.state.secondName} onChange={this.handleChange} />\r\n                    <p />\r\n                    <input className=\"newAdmin\" type=\"password\" id=\"password\" placeholder=\"Введіть пароль\" name=\"password\" required={true} onChange={this.handleChange} />\r\n                    <p />\r\n                    <button className='myButton'>Підтвердити добавлення</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NewAdmin;","D:\\ate-application-ui\\ate-ui\\src\\pages\\stat\\CommonStatistic.js",["191","192","193"],"import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport './CommonStatistic.css';\r\nimport Dropdown from 'react-dropdown';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\r\nimport ReactToPdf from 'react-to-pdf'\r\n\r\nclass Statistic extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            startDate: new Date('2019-7-1'),\r\n            endDate: new Date(),\r\n\r\n            numberOfOrders: '',\r\n            departmentsNumber: [],\r\n            employeeNumber: [],\r\n            typeItemNumber: [],\r\n            commonProfit: '',\r\n            departmentsProfit: [],\r\n            employeeProfit: [],\r\n            typeItemProfit: [],\r\n            dateOrders: [],\r\n            dateProfit: [],\r\n\r\n            departments: []\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        console.log(e)\r\n        let target = e.target;\r\n        let value = target.value;\r\n        this.setState({ [target.name]: value });\r\n        this.componentDidMount()\r\n    }\r\n\r\n    reloud = async () => {\r\n        this.forceUpdate()\r\n    }\r\n\r\n    componentDidMount() {\r\n        let initialItems = [];\r\n        fetch('http://localhost:5000/ate-api/departments/')\r\n            .then(response => { return response.json(); })\r\n            .then(data => {\r\n                initialItems = data.map((Department) => { return Department });\r\n                this.setState({ departments: initialItems });\r\n            });\r\n\r\n        fetch(`http://localhost:5000/ate-api/statistic/`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            }\r\n        }).then(function (response) {\r\n            if (response.status === 500) {\r\n                NotificationManager.error('Помилка сервера');\r\n            }\r\n            if (response.status === 200) {\r\n                NotificationManager.success('Статистика обрахована успішно');\r\n            }\r\n            return response.json();\r\n        }).then(data => {\r\n            this.setState(data, this.reloud)\r\n        }).catch(function () {\r\n            NotificationManager.error('Помилка сервера');\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        function getRandomColor() {\r\n            var letters = '0123456789ABCDEF';\r\n            var color = '#';\r\n            for (var i = 0; i < 6; i++) {\r\n                color += letters[Math.floor(Math.random() * 16)];\r\n            }\r\n            return color;\r\n        }\r\n        function convertMap(paramMap) {\r\n            console.log(paramMap)\r\n            let listKey = Object.keys(paramMap);\r\n            let listAnswers = [];\r\n            listKey.map(item => {\r\n                listAnswers.push({ title: item, value: paramMap[item], color: getRandomColor() });\r\n            })\r\n            console.log(listAnswers)\r\n            return listAnswers;\r\n        }\r\n\r\n        function convertMap2(paramMap) {\r\n            console.log(paramMap)\r\n            let listKey = Object.keys(paramMap);\r\n            let listAnswers = [];\r\n            listKey.map(item => {\r\n                let itemN = item.slice(0, 10);\r\n                listAnswers.push({ name: itemN, uv: paramMap[item], });\r\n            })\r\n            console.log(listAnswers)\r\n            return listAnswers;\r\n        }\r\n        const defaultLabelStyle = {\r\n            fontSize: '8px',\r\n            fontFamily: 'sans-serif',\r\n            fill: 'white'\r\n        };\r\n\r\n        let depatrmentNames = this.state.departments.map((item) => { return item.name });\r\n        let handleDepartment = (e) => {\r\n            let handleItem;\r\n            this.state.departments.forEach((item) => { if (e.value === item.name) handleItem = item; });\r\n            this.setState({ departmentDto: handleItem });\r\n            this.componentDidMount();\r\n        }\r\n        const downloadFile = async () => {\r\n            const fileName = \"statistic\";\r\n            const json = JSON.stringify(this.state);\r\n            const blob = new Blob([json],{type:'application/json'});\r\n            const href = await URL.createObjectURL(blob);\r\n            const link = document.createElement('a');\r\n            link.href = href;\r\n            link.download = fileName + \".json\";\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n          }\r\n\r\n        return (\r\n            <div className=\"test\">\r\n                <button className=\"myButton\" onClick={() => window.print()}>Маніпуляції з PDF форматом</button>\r\n                <button className=\"myButton\" onClick={() => downloadFile()}>Статистика в json форматі</button>\r\n                <h1>Збір загальної статистики</h1>\r\n                <div className=\"inputStatDiv\">\r\n                    Від:\r\n                        <input className=\"change\" type=\"date\" id=\"startDate\" required={true} placeholder=\"Enter startDate\" name=\"startDate\" onChange={this.handleChange} />\r\n                    До:\r\n                        <input className=\"change\" type=\"date\" id=\"endDate\" required={true} placeholder=\"Enter endDate\" name=\"endDate\" onChange={this.handleChange} />\r\n                    <p />\r\n                    <Dropdown className=\"dropDown\" options={depatrmentNames} onChange={handleDepartment} placeholder=\"Виберіть відділення\" />\r\n                    <hr></hr>\r\n                    <b>Загальна кількість замовлень: {this.state.numberOfOrders} </b>\r\n                    <p></p>\r\n                    <b>Загальний прибуток: {this.state.commonProfit}</b>\r\n                </div>\r\n                <div className=\"departmentsNumberBorder\">\r\n                    <div className=\"borderText\">Кількість замовлень для кожного відділення </div>\r\n                    <PieChart\r\n                        data={convertMap(this.state.departmentsNumber)}\r\n                        label={({ dataEntry }) => dataEntry.title + '(' + dataEntry.value + ')'}\r\n                        radius={PieChart.defaultProps.radius - 7}\r\n                        segmentsShift={(index) => (index === 0 ? 7 : 0.5)}\r\n                        style={{ height: '200px' }}\r\n                        labelStyle={{ ...defaultLabelStyle }}\r\n                    />\r\n                </div>\r\n                <div className=\"departmentsProfitBorder\">\r\n                    <div className=\"borderText\">Відношення доходу кожного відділення</div>\r\n                    <PieChart\r\n                        data={convertMap(this.state.departmentsProfit)}\r\n                        label={({ dataEntry }) => dataEntry.title + '\\n(' + dataEntry.value + ')'}\r\n                        radius={PieChart.defaultProps.radius - 7}\r\n                        segmentsShift={(index) => (index === 0 ? 7 : 0.5)}\r\n                        style={{ height: '200px' }}\r\n                        labelStyle={{ ...defaultLabelStyle }}\r\n                    />\r\n                </div>\r\n                <div className=\"employeeNumberBorder\">\r\n                    <div className=\"borderText\">Кількість замовлень для кожного працівника</div>\r\n                    <PieChart\r\n                        data={convertMap(this.state.employeeNumber)}\r\n                        label={({ dataEntry }) => dataEntry.title + '\\n(' + dataEntry.value + ')'}\r\n                        radius={PieChart.defaultProps.radius - 7}\r\n                        segmentsShift={(index) => (index === 0 ? 7 : 0.5)}\r\n                        style={{ height: '200px' }}\r\n                        labelStyle={{ ...defaultLabelStyle }}\r\n                    />\r\n                </div>\r\n                <div className=\"employeeProfitBorder\">\r\n                    <div className=\"borderText\">Відношення доходу для кожного працівника</div>\r\n                    <PieChart\r\n                        data={convertMap(this.state.employeeProfit)}\r\n                        label={({ dataEntry }) => dataEntry.title + '\\n(' + dataEntry.value + ')'}\r\n                        radius={PieChart.defaultProps.radius - 7}\r\n                        segmentsShift={(index) => (index === 0 ? 7 : 0.5)}\r\n                        style={{ height: '200px' }}\r\n                        labelStyle={{ ...defaultLabelStyle }}\r\n                    />\r\n                </div>\r\n                <div className=\"typeItemNumberBorder\">\r\n                    <div className=\"borderText\">Кількість замовлень для кожного типу товару</div>\r\n                    <PieChart\r\n                        data={convertMap(this.state.typeItemNumber)}\r\n                        label={({ dataEntry }) => dataEntry.title + '\\n(' + dataEntry.value + ')'}\r\n                        radius={PieChart.defaultProps.radius - 7}\r\n                        segmentsShift={(index) => (index === 0 ? 7 : 0.5)}\r\n                        style={{ height: '200px' }}\r\n                        labelStyle={{ ...defaultLabelStyle }}\r\n                    />\r\n                </div>\r\n                <div className=\"typeItemProfitBorder\">\r\n                    <div className=\"borderText\">Відношення доходу для кожного типу товару</div>\r\n                    <PieChart\r\n                        data={convertMap(this.state.typeItemProfit)}\r\n                        label={({ dataEntry }) => dataEntry.title + '\\n(' + dataEntry.value + ')'}\r\n                        radius={PieChart.defaultProps.radius - 7}\r\n                        segmentsShift={(index) => (index === 0 ? 7 : 0.5)}\r\n                        style={{ height: '200px' }}\r\n                        labelStyle={{ ...defaultLabelStyle }}\r\n                    />\r\n                </div>\r\n                <div className=\"typeItemProfitBorder\">\r\n                    <div className=\"borderText\">Відношення доходу для кожного типу товару</div>\r\n                    <PieChart\r\n                        data={convertMap(this.state.typeItemProfit)}\r\n                        label={({ dataEntry }) => dataEntry.title + '\\n(' + dataEntry.value + ')'}\r\n                        radius={PieChart.defaultProps.radius - 7}\r\n                        segmentsShift={(index) => (index === 0 ? 7 : 0.5)}\r\n                        style={{ height: '200px' }}\r\n                        labelStyle={{ ...defaultLabelStyle }}\r\n                    />\r\n                </div>\r\n                <div className=\"dateOrdersBorder\">\r\n                    <b>Кількість замовлень кожного місяця протягом заданого часу</b>\r\n                    <LineChart width={1500} height={300} data={convertMap2(this.state.dateOrders)}>\r\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                        <CartesianGrid stroke=\"#ccc\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                    </LineChart>\r\n                </div>\r\n                <div className=\"dateProfitBorder\">\r\n                    <b>Щомісячний дохід протягом заданого часу</b>\r\n                    <LineChart width={1500} height={300} data={convertMap2(this.state.dateProfit)}>\r\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n                        <CartesianGrid stroke=\"#ccc\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                    </LineChart>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} export default Statistic; ",{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"194","replacedBy":"198"},{"ruleId":"196","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":3,"column":27,"nodeType":"202","messageId":"203","endLine":3,"endColumn":33},{"ruleId":"200","severity":1,"message":"204","line":3,"column":41,"nodeType":"202","messageId":"203","endLine":3,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":38,"column":33,"nodeType":"207","messageId":"208","endLine":38,"endColumn":35},{"ruleId":"205","severity":1,"message":"206","line":41,"column":33,"nodeType":"207","messageId":"208","endLine":41,"endColumn":35},{"ruleId":"194","replacedBy":"209"},{"ruleId":"196","replacedBy":"210"},{"ruleId":"194","replacedBy":"211"},{"ruleId":"196","replacedBy":"212"},{"ruleId":"205","severity":1,"message":"206","line":31,"column":33,"nodeType":"207","messageId":"208","endLine":31,"endColumn":35},{"ruleId":"205","severity":1,"message":"206","line":37,"column":33,"nodeType":"207","messageId":"208","endLine":37,"endColumn":35},{"ruleId":"213","severity":1,"message":"214","line":51,"column":49,"nodeType":"215","endLine":51,"endColumn":69},{"ruleId":"200","severity":1,"message":"216","line":58,"column":13,"nodeType":"202","messageId":"203","endLine":58,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":90,"column":17,"nodeType":"219","endLine":90,"endColumn":100},{"ruleId":"217","severity":1,"message":"218","line":99,"column":60,"nodeType":"219","endLine":99,"endColumn":125},{"ruleId":"217","severity":1,"message":"218","line":100,"column":57,"nodeType":"219","endLine":100,"endColumn":101},{"ruleId":"220","severity":1,"message":"221","line":45,"column":13,"nodeType":"222","endLine":45,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":47,"column":13,"nodeType":"222","endLine":47,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":49,"column":13,"nodeType":"222","endLine":49,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":108,"column":13,"nodeType":"222","endLine":108,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":113,"column":13,"nodeType":"222","endLine":113,"endColumn":28},{"ruleId":"213","severity":1,"message":"214","line":132,"column":152,"nodeType":"215","endLine":132,"endColumn":160},{"ruleId":"220","severity":1,"message":"221","line":111,"column":13,"nodeType":"222","endLine":111,"endColumn":23},{"ruleId":"220","severity":1,"message":"221","line":116,"column":13,"nodeType":"222","endLine":116,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":137,"column":21,"nodeType":"219","endLine":137,"endColumn":79},{"ruleId":"200","severity":1,"message":"223","line":34,"column":17,"nodeType":"202","messageId":"203","endLine":34,"endColumn":29},{"ruleId":"200","severity":1,"message":"216","line":65,"column":13,"nodeType":"202","messageId":"203","endLine":65,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":96,"column":21,"nodeType":"219","endLine":96,"endColumn":78},{"ruleId":"217","severity":1,"message":"218","line":101,"column":58,"nodeType":"219","endLine":101,"endColumn":117},{"ruleId":"205","severity":1,"message":"206","line":48,"column":33,"nodeType":"207","messageId":"208","endLine":48,"endColumn":35},{"ruleId":"205","severity":1,"message":"206","line":54,"column":33,"nodeType":"207","messageId":"208","endLine":54,"endColumn":35},{"ruleId":"200","severity":1,"message":"224","line":2,"column":9,"nodeType":"202","messageId":"203","endLine":2,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":36,"column":33,"nodeType":"207","messageId":"208","endLine":36,"endColumn":35},{"ruleId":"205","severity":1,"message":"206","line":42,"column":33,"nodeType":"207","messageId":"208","endLine":42,"endColumn":35},{"ruleId":"200","severity":1,"message":"225","line":7,"column":8,"nodeType":"202","messageId":"203","endLine":7,"endColumn":18},{"ruleId":"226","severity":1,"message":"227","line":91,"column":30,"nodeType":"228","messageId":"229","endLine":91,"endColumn":32},{"ruleId":"226","severity":1,"message":"227","line":102,"column":30,"nodeType":"228","messageId":"229","endLine":102,"endColumn":32},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],["230"],["231"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["230"],["231"],["230"],["231"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'res' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'initialItems' is assigned a value but never used.","'Link' is defined but never used.","'ReactToPdf' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]